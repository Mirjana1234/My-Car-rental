@model IEnumerable<My_Car_rental.Models.Car>
@inject Microsoft.AspNetCore.Identity.UserManager<My_Car_rental.Areas.Identity.Data.My_Car_rentalUser> UserManager

@{
    ViewData["Title"] = "Available Cars";
    var userEmail = User.Identity.IsAuthenticated ? UserManager.GetUserName(User) : "";
}

<h2 class="mb-4">Choose Your Ride</h2>

<div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach (var car in Model)
    {
        <div class="col">
            <div class="card h-100 shadow-sm">
                <img src="@car.ImageUrl" alt="@car.Brand @car.Model" class="card-img-top" style="height: 200px; object-fit: cover;">
                

                <div class="card-body">
                    <h5 class="card-title">@car.Brand @car.Model</h5>
                    <p class="card-text">Year: @car.Year</p>
                    <p class="card-text">
                        Status:
                        @if (car.IsAvailable)
                        {
                            <span class="text-success fw-bold">Available</span>
                        }
                        else
                        {
                            <span class="text-danger fw-bold">Booked</span>
                        }
                    </p>
                </div>
                <div class="card-footer text-center">
                    <a asp-action="Details" asp-route-id="@car.Id" class="btn btn-info btn-sm me-1">Details</a>
                    @if (car.IsAvailable)
                    {
                        <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#bookingModal-@car.Id">Book Now</button>
                    }
                    else
                    {
                        <button class="btn btn-secondary btn-sm" disabled>Unavailable</button>
                    }
                </div>
            </div>
        </div>

        <!-- Booking Modal -->
        @if (car.IsAvailable)
        {
            <div class="modal fade" id="bookingModal-@car.Id" tabindex="-1" aria-labelledby="bookingModalLabel-@car.Id" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <form method="post" action="/Home/BookModal">
                            <div class="modal-header">
                                <h5 class="modal-title" id="bookingModalLabel-@car.Id">Book @car.Brand @car.Model</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <input type="hidden" name="CarId" value="@car.Id" />
                                <div class="mb-3">
                                    <label for="email-@car.Id" class="form-label">Email address</label>
                                    <input type="email" class="form-control" id="email-@car.Id" name="UserEmail" value="@userEmail" required />
                                </div>
                                <div class="mb-3">
                                    <label for="startDate-@car.Id" class="form-label">Start Date</label>
                                    <input type="date" class="form-control" id="startDate-@car.Id" name="StartDate" required />
                                </div>
                                <div class="mb-3">
                                    <label for="endDate-@car.Id" class="form-label">End Date</label>
                                    <input type="date" class="form-control" id="endDate-@car.Id" name="EndDate" required />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Price per day</label>
                                    <input type="text" class="form-control" value="@car.PricePerDay.ToString("C")" readonly />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Total Price</label>
                                    <input type="text" class="form-control total-price" id="totalPrice-@car.Id" name="TotalPrice" value="@car.PricePerDay.ToString("C")" readonly />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-success">Confirm Booking</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.modal').forEach(function(modal) {
            modal.addEventListener('shown.bs.modal', function (event) {
                var carId = modal.id.split('-')[1];
                var startDateInput = document.getElementById('startDate-' + carId);
                var endDateInput = document.getElementById('endDate-' + carId);
                var totalPriceInput = document.getElementById('totalPrice-' + carId);
                var pricePerDay = parseFloat(document.querySelector('input[name="CarId"][value="' + carId + '"]').closest('.modal-content').querySelector('input[readonly]').value.replace(/[^0-9\,\.]/g, '').replace(',', '.'));

                function updateTotalPrice() {
                    var start = new Date(startDateInput.value);
                    var end = new Date(endDateInput.value);
                    if (start && end && end > start) {
                        var days = Math.ceil((end - start) / (1000 * 60 * 60 * 24)) + 1;
                        var total = days * pricePerDay;
                        totalPriceInput.value = total.toLocaleString('sv-SE', { style: 'currency', currency: 'SEK' });
                    } else {
                        totalPriceInput.value = pricePerDay.toLocaleString('sv-SE', { style: 'currency', currency: 'SEK' });
                    }
                }
                startDateInput.addEventListener('change', updateTotalPrice);
                endDateInput.addEventListener('change', updateTotalPrice);
            });
        });
    </script>
}